name: Workflow
on: ["push"]
jobs:
  build-devcontainer:
    # https://github.com/devcontainers/ci/blob/cc80b0ef439af5f89482a346a8362cfb815cd3ca/docs/github-action.md
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: login to registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: refresh devcontainer for this branch
        uses: devcontainers/ci@v0.3
        with:
          imageName: ghcr.io/${{ github.repository }}-devcontainer-${{ github.ref_name }}
          cacheFrom: ghcr.io/${{ github.repository }}-devcontainer-${{ github.ref_name }}
          push: always
  cargo-clippy:
    runs-on: ubuntu-latest
    needs: ["build-devcontainer"]
    steps:
      - uses: actions/checkout@v3
      - uses: devcontainers/ci@v0.3
        with:
          cacheFrom: ghcr.io/${{ github.repository }}-devcontainer-${{ github.ref_name }}
          push: never
          runCmd: |
            cargo clippy -- --deny=warnings
            cargo clippy --tests -- --deny=warnings
  cargo-spellcheck:
    runs-on: ubuntu-latest
    needs: ["build-devcontainer"]
    steps:
      - uses: actions/checkout@v3
      - uses: devcontainers/ci@v0.3
        with:
          cacheFrom: ghcr.io/${{ github.repository }}-devcontainer-${{ github.ref_name }}
          push: never
          runCmd: cargo spellcheck
  cargo-udeps:
    runs-on: ubuntu-latest
    needs: ["build-devcontainer"]
    steps:
      - uses: actions/checkout@v3
      - uses: devcontainers/ci@v0.3
        with:
          cacheFrom: ghcr.io/${{ github.repository }}-devcontainer-${{ github.ref_name }}
          push: never
          runCmd: cargo +nightly udeps
  cargo-nextest:
    runs-on: ubuntu-latest
    needs: ["build-devcontainer"]
    steps:
      - uses: actions/checkout@v3
      - uses: devcontainers/ci@v0.3
        with:
          cacheFrom: ghcr.io/${{ github.repository }}-devcontainer-${{ github.ref_name }}
          push: never
          runCmd: cargo nextest run
  doctests:
    runs-on: ubuntu-latest
    needs: ["build-devcontainer"]
    steps:
      - uses: actions/checkout@v3
      - uses: devcontainers/ci@v0.3
        with:
          cacheFrom: ghcr.io/${{ github.repository }}-devcontainer-${{ github.ref_name }}
          push: never
          runCmd: cargo test --doc
  build-release:
    runs-on: ubuntu-latest
    needs: ["build-devcontainer"]
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - universal2-apple-darwin
          - x86_64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v3
      - uses: devcontainers/ci@v0.3
        with:
          cacheFrom: ghcr.io/${{ github.repository }}-devcontainer-${{ github.ref_name }}
          push: never
          runCmd: cargo zigbuild --release --target ${{ matrix.target }}
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: target/${{ matrix.target }}/release/yak-shaver
  taplo-format:
    runs-on: ubuntu-latest
    needs: ["build-devcontainer"]
    steps:
      - uses: actions/checkout@v3
      - uses: devcontainers/ci@v0.3
        with:
          cacheFrom: ghcr.io/${{ github.repository }}-devcontainer-${{ github.ref_name }}
          push: never
          runCmd: taplo format --check
  taplo-lint:
    runs-on: ubuntu-latest
    needs: ["build-devcontainer"]
    steps:
      - uses: actions/checkout@v3
      - uses: devcontainers/ci@v0.3
        with:
          cacheFrom: ghcr.io/${{ github.repository }}-devcontainer-${{ github.ref_name }}
          push: never
          runCmd: taplo lint
